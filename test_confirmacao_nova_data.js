console.log('=== TESTE: CONFIRMA√á√ÉO DE NOVA DATA ===\n');

// Simular fluxo corrigido
function simularFluxoCorrigido() {
  console.log('FLUXO CORRIGIDO:');
  console.log('1. Sistema oferece: "17/09, 18/09..."');
  console.log('2. Usu√°rio: "pode ser dia 30?"');
  console.log('3. Sistema: "Claro! Posso agendar para ter√ßa-feira, 30/09/2025, no per√≠odo da tarde?"');
  console.log('4. Usu√°rio: "dia 28"');
  console.log('5. Sistema: "Infelizmente, domingo, 28/09/2025, n√£o √© um dia √∫til..."');
  console.log('6. Usu√°rio: "29"');
  console.log('7. Sistema: ‚úÖ "Perfeito! Posso confirmar o agendamento da TV REPARO para segunda-feira, 29/09/2025, no per√≠odo da tarde? üòä"');
  console.log('8. Usu√°rio: "sim"');
  console.log('9. Sistema: ‚úÖ Agenda para 29/09/2025');
  console.log('');
}

function simularFluxoAnterior() {
  console.log('FLUXO ANTERIOR (PROBLEM√ÅTICO):');
  console.log('1. Sistema oferece: "17/09, 18/09..."');
  console.log('2. Usu√°rio: "pode ser dia 30?"');
  console.log('3. Sistema: "Claro! Posso agendar para ter√ßa-feira, 30/09/2025, no per√≠odo da tarde?"');
  console.log('4. Usu√°rio: "dia 28"');
  console.log('5. Sistema: "Infelizmente, o dia 28/09/2025 n√£o √© um dia √∫til..."');
  console.log('6. Usu√°rio: "29"');
  console.log('7. Sistema: ‚ùå Agenda DIRETAMENTE para 29/09/2025 (SEM CONFIRMA√á√ÉO!)');
  console.log('');
}

// Testar l√≥gica de confirma√ß√£o
function testarConfirmacao(mensagem, tipoUltimaPergunta) {
  console.log(`Testando: "${mensagem}" (contexto: ${tipoUltimaPergunta})`);
  
  if (tipoUltimaPergunta === 'AGENDAMENTO_CONFIRMACAO_NOVA_DATA') {
    const mensagemLower = mensagem.toLowerCase().trim();
    const confirmacoesPositivas = ['sim', 'ok', 'pode ser', 'fechado', 'confirmo', 'quero', 'vamos', 'perfeito', 'confirma', 'confirmar'];
    const confirmacoesNegativas = ['n√£o', 'nao', 'n√£o pode', 'nao pode', 'cancelar', 'desistir'];
    
    if (confirmacoesPositivas.some(palavra => mensagemLower.includes(palavra))) {
      console.log('  ‚úÖ Confirma√ß√£o POSITIVA ‚Üí Agendar');
    } else if (confirmacoesNegativas.some(palavra => mensagemLower.includes(palavra))) {
      console.log('  ‚ùå Confirma√ß√£o NEGATIVA ‚Üí Oferecer alternativas');
    } else {
      console.log('  ü§î Resposta AMB√çGUA ‚Üí Perguntar novamente');
    }
  } else {
    console.log('  ‚ÑπÔ∏è Contexto normal ‚Üí Processar normalmente');
  }
  console.log('');
}

console.log('=== COMPARA√á√ÉO DOS FLUXOS ===\n');
simularFluxoAnterior();
simularFluxoCorrigido();

console.log('=== TESTES DE CONFIRMA√á√ÉO ===\n');
testarConfirmacao('sim', 'AGENDAMENTO_CONFIRMACAO_NOVA_DATA');
testarConfirmacao('n√£o', 'AGENDAMENTO_CONFIRMACAO_NOVA_DATA');
testarConfirmacao('ok', 'AGENDAMENTO_CONFIRMACAO_NOVA_DATA');
testarConfirmacao('talvez', 'AGENDAMENTO_CONFIRMACAO_NOVA_DATA');
testarConfirmacao('29', 'AGENDAMENTO_SUGESTAO');

console.log('=== BENEF√çCIOS DA CORRE√á√ÉO ===');
console.log('‚úÖ Sistema sempre pede confirma√ß√£o para datas diferentes');
console.log('‚úÖ Usu√°rio tem controle sobre o agendamento');
console.log('‚úÖ Evita agendamentos n√£o intencionais');
console.log('‚úÖ Melhora experi√™ncia e confian√ßa do usu√°rio');
console.log('‚úÖ Fluxo mais previs√≠vel e transparente');
console.log('\nüéâ CORRE√á√ÉO IMPLEMENTADA COM SUCESSO!');
